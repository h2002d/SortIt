@model SortItResearch.Models.Question

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.Hidden("AnswerCount", Model.Answers.Count, new { @id = "AnswerCount" })

    <div class="form-horizontal">
        <h2>New question</h2>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        

        <div class="form-group">
            @Html.Label("Test question", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">Answers</div>
            <div class="col-md-10">
                One right answer
                @Html.RadioButtonFor(model => model.Type, 0, new { @onclick = "setAnswerType()" })
                Two or more right answers
                @Html.RadioButtonFor(model => model.Type, 1, new { @onclick = "setAnswerType()" })
            </div>

        </div>
        <div class="form-group">
            <div class="col-md-2">
            </div>
            <div class="col-md-10" id="AnswerContainer">
                @for (int i = 0; i < Model.Answers.Count(); i++)
                {
                    <div id="answerDiv">
                        @Html.HiddenFor(m => m.Answers[i].Id)
                        @Html.HiddenFor(m => m.Answers[i].QuestionId)
                        @Html.EditorFor(m => m.Answers[i].Name)
                        @if (Model.Type == 0)
                        {
                            <input value="true" @(Model.Answers[i].IsRight? "checked":"") name="Answers[@i].IsRight" onclick="checkedRadioButton(this)" type="radio" data-val-required="The IsRight field is required.">
                        }
                        else
                        {
                            <input value="true" @(Model.Answers[i].IsRight? "checked":"") name="Answers[@i].IsRight" onclick="checkedRadioButton(this)" type="checkbox" data-val-required="The IsRight field is required.">
                        }
                        <a onclick="removeFromAnswers(@Model.Answers[i].Id,this)">
                            <img src="~/images/removeIcon.png" />
                        </a>
                        <br />
                    </div>
                }
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <a onclick="addAnswers(@(Model.Answers.Count))">
                    <img src="~/images/addIcon.png" />
                </a>
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

